/*
	This code was generated by SQL Compact Code Generator version 1.2.1.5

	SQL Compact Code Generator was written by Christian Resma Helle (http://sqlcecodegen.codeplex.com)
	and is under the GNU General Public License version 2 (GPLv2)

	Generated: 07/19/2011 18:06:46
*/



namespace ConsoleApp.TestDatabaseMultiple
{
	/// <summary>
	/// Represents the Product repository
	/// </summary>
	public partial interface IProductRepository : IRepository<Product>
	{
		/// <summary>
		/// Transaction instance created from <see cref="IDataRepository" />
		/// </summary>
		System.Data.SqlServerCe.SqlCeTransaction Transaction { get; set; }

		/// <summary>
		/// Retrieves a collection of items by Id
		/// </summary>
		/// <param name="Id">Id value</param>
		System.Collections.Generic.List<Product> SelectById(System.Int32? Id);

		/// <summary>
		/// Retrieves the first set of items specified by count by Id
		/// </summary>
		/// <param name="Id">Id value</param>
		/// <param name="count">the number of records to be retrieved</param>
		System.Collections.Generic.List<Product> SelectById(System.Int32? Id, int count);

		/// <summary>
		/// Retrieves a collection of items by PartNumber
		/// </summary>
		/// <param name="PartNumber">PartNumber value</param>
		System.Collections.Generic.List<Product> SelectByPartNumber(System.String PartNumber);

		/// <summary>
		/// Retrieves the first set of items specified by count by PartNumber
		/// </summary>
		/// <param name="PartNumber">PartNumber value</param>
		/// <param name="count">the number of records to be retrieved</param>
		System.Collections.Generic.List<Product> SelectByPartNumber(System.String PartNumber, int count);

		/// <summary>
		/// Retrieves a collection of items by Ean13
		/// </summary>
		/// <param name="Ean13">Ean13 value</param>
		System.Collections.Generic.List<Product> SelectByEan13(System.String Ean13);

		/// <summary>
		/// Retrieves the first set of items specified by count by Ean13
		/// </summary>
		/// <param name="Ean13">Ean13 value</param>
		/// <param name="count">the number of records to be retrieved</param>
		System.Collections.Generic.List<Product> SelectByEan13(System.String Ean13, int count);

		/// <summary>
		/// Retrieves a collection of items by Name
		/// </summary>
		/// <param name="Name">Name value</param>
		System.Collections.Generic.List<Product> SelectByName(System.String Name);

		/// <summary>
		/// Retrieves the first set of items specified by count by Name
		/// </summary>
		/// <param name="Name">Name value</param>
		/// <param name="count">the number of records to be retrieved</param>
		System.Collections.Generic.List<Product> SelectByName(System.String Name, int count);

		/// <summary>
		/// Retrieves a collection of items by Description
		/// </summary>
		/// <param name="Description">Description value</param>
		System.Collections.Generic.List<Product> SelectByDescription(System.String Description);

		/// <summary>
		/// Retrieves the first set of items specified by count by Description
		/// </summary>
		/// <param name="Description">Description value</param>
		/// <param name="count">the number of records to be retrieved</param>
		System.Collections.Generic.List<Product> SelectByDescription(System.String Description, int count);

		/// <summary>
		/// Retrieves a collection of items by Rating
		/// </summary>
		/// <param name="Rating">Rating value</param>
		System.Collections.Generic.List<Product> SelectByRating(System.Decimal? Rating);

		/// <summary>
		/// Retrieves the first set of items specified by count by Rating
		/// </summary>
		/// <param name="Rating">Rating value</param>
		/// <param name="count">the number of records to be retrieved</param>
		System.Collections.Generic.List<Product> SelectByRating(System.Decimal? Rating, int count);

		/// <summary>
		/// Delete records by Id
		/// </summary>
		/// <param name="Id">Id value</param>
		int DeleteById(System.Int32? Id);

		/// <summary>
		/// Delete records by PartNumber
		/// </summary>
		/// <param name="PartNumber">PartNumber value</param>
		int DeleteByPartNumber(System.String PartNumber);

		/// <summary>
		/// Delete records by Ean13
		/// </summary>
		/// <param name="Ean13">Ean13 value</param>
		int DeleteByEan13(System.String Ean13);

		/// <summary>
		/// Delete records by Name
		/// </summary>
		/// <param name="Name">Name value</param>
		int DeleteByName(System.String Name);

		/// <summary>
		/// Delete records by Description
		/// </summary>
		/// <param name="Description">Description value</param>
		int DeleteByDescription(System.String Description);

		/// <summary>
		/// Delete records by Rating
		/// </summary>
		/// <param name="Rating">Rating value</param>
		int DeleteByRating(System.Decimal? Rating);

		/// <summary>
		/// Create new record without specifying a primary key
		/// </summary>
		void Create(System.String PartNumber, System.String Ean13, System.String Name, System.String Description, System.Decimal? Rating);

		/// <summary>
		/// Create new record specifying all fields
		/// </summary>
		void Create(System.Int32? Id, System.String PartNumber, System.String Ean13, System.String Name, System.String Description, System.Decimal? Rating);
	}
}

